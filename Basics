OOPS:
"Object technology is the combination of four core ideas: a structuring method, a
reliability discipline, an epistemological principle and a classification technique". 

                      OOPS
                       |
                       |
---Structure, reliability, epistemology and classification---

Page: 8

Structure:
  The structuring method applies to software decomposition and reuse.
                      Structure
                         |
                         |
            software decomposition and reuse

  Decomposition: Process of breaking down the something complex into simpler and manageable one. 
  Software decomposition : software decomposition is a process of beaking down the system into simpler and manageble modules or components,
                           simplifying the design, development, testing, and maintenance of the software system. 

Class covers here

Reliability :

  what is reliability? , reliability something we can trust , that it will do what is suppose to do, without unexpected failures.
  
  Reliability discipline : is a approach/ablity of software system do what is suppose to do , without unexpected failures.

contract covers here

Epistemological principle:

  Its a idea of describing an object by its external feature rather than internal working and implementation.
  
  This principle asks a question , how do we describe a classes ?
  
  In object technology object is descibed by its class , what we can do with it(features).
  
  Example: Sort() is a class , where sort object  describes that we can do sorting activity using this class , here the internal working and implementation is 
  not described rather its gives a general and external feature that this object do sorting.
  
  Abstraction , modularity , encapsulation cover these area.

Classification technique:

  Classification technique is process of organizing and categorizing the object in a hierarchies based on their characteristics and behaviors.
  This helps in managing and structuring complex system by grouping related objects together.

  InHeritance cover these area.

-------------------------------------------------------------------------------------------------


Software Quality:

 Engineering seeks quality,software engineering is the production of quality software.

  We all want our software systems to be fast, reliable, easy to use, readable, modular,
  structured and so on. But these adjectives describe two different sorts of qualities.

               Software Quality
                      |
                      |
        EXTERNAL AND INTERNAL FACTORS

  1.User want's software to be speed , ease of use. these are called EXTERNAL factors.
  2. Other quality's like readable, modular are INTERNAL FACTORS , these factors are cared for Software devlopers who are accessing the software code.
  
  In the End only External factor matters. only EXTERNAL factors are will used to scale a application from user end.
  
  But the key to achieving these external factors is in the internal ones

      EXTERNAL FACTORS
            |  
            |
Correctness,Robustness,Extendibility,Reusability,Compatibility,Efficiency,Portability,Ease of use,Functionality,Timeliness


Correctness: 
 Correctness is ability of software system that it should do perform its task. as per the system requirement.
Robustness:
 Robustness is a ability of software system that it should handle the unexpected/abnormal/out of scope situation.   
  an abnormal case is simply a case that is not covered by the specification or requirement.
Extendibility: 
  Extendibility is ease of adapting software system to the new change in requiremnt /specification.
  a software system should be designed with simple design and decentralised.
Reusability:
  Reusability is a ability of software components in many other software appliaction.
Compatibility:
  Compatibility is ease of combining software elements with others.
Efficiency:
  Efficiency is a ability of a software system . which considers processing time and space occupied.
Portability:
 Portability is the ease of transferring software products to various hardware
 and software environments.
Ease of use:
  Ease of use is the ease with which people of various backgrounds and
 qualifications can learn to use software products and apply them to solve
 problems. It also covers the ease of installation, operation and monitoring. 
Functionality:
  Functionality is the extent of possibilities provided by a system.
Timeliness:
  Timeliness is the ability of a software system to be released when or before
  its users want it









